<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-2.5.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="resourceLoader" class="org.springframework.core.io.DefaultResourceLoader"/>
    <bean id="fooBar" class="com.wenqi.springioc.applicationcontext.resource.beaninject.FooBar">
        <property name="resourceLoader" ref="resourceLoader"/>
    </bean>

    <bean id="fooBarApi" class="com.wenqi.springioc.applicationcontext.resource.beaninject.FooBarApi"/>
    <bean id="fooBarApi2" class="com.wenqi.springioc.applicationcontext.resource.beaninject.FooBarApi2"/>

    <!-- 在配置文件中以String形式指定template所在位置, ApplicatonContext就可以正确地转换类型并注入依赖 -->
    <bean id="mailer" class="com.wenqi.springioc.applicationcontext.resource.beaninject.XMailer">
        <property name="template" value=""/>
     </bean>

    <bean id="methodExecutionEventListener" class="com.wenqi.springioc.applicationcontext.eventpublish.spring.MethodExecutionEventListener"/>
    <bean id="methodExecutionEventPublisher" class="com.wenqi.springioc.applicationcontext.eventpublish.spring.MethodExecutionEventPublisher"/>

</beans>